<svg xmlns="http://www.w3.org/2000/svg" id="ayop-logo" width="100" height="100" x="0" y="0" onload="setClock()" version="1.1" viewBox="0 0 100 100"><defs><style id="style_common" type="text/css">#clock_circle,line.hand{stroke-miterlimit:8.8;stroke-dasharray:none;stroke-dashoffset:0}line.hand{fill:none}#clock_circle,#text_background,line.hand{stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1}#clock_circle{stroke-width:1}#text_background{fill:none;fill-opacity:1;stroke-width:3.75px}#pyramid,line.brick_line{stroke-miterlimit:8.8;stroke-opacity:1;stroke-dasharray:none}#pyramid{stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-dashoffset:0}line.brick_line{stroke-width:.2;stroke-linecap:square;stroke-linejoin:miter}</style><style id="style_default" type="text/css">circle,line.hand{stroke:#000}circle{fill:#fff}#text_background{stroke:#fff}#text_foreground{stroke:#000;stroke-width:.75}line.brick_line{fill:none;stroke:#000}#pyramid{stroke:#000}</style><pattern id="pyramid_bricks" width="4" height="4" x=".74" y=".7" patternTransform="scale(2.3)" patternUnits="userSpaceOnUse"><line x1="0" x2="4" y1="1" y2="1" class="brick_line"/><line x1="0" x2="4" y1="3" y2="3" class="brick_line"/><line x1="3" x2="3" y1="0" y2="1" class="brick_line"/><line x1="1" x2="1" y1="1" y2="3" class="brick_line"/><line x1="3" x2="3" y1="3" y2="4" class="brick_line"/></pattern></defs><path id="pyramid" fill="url(#pyramid_bricks)" fill-opacity="1" d="M 0,86.6 L 50,0 L 100,86.6 Z"/><circle id="clock_circle" cx="50" cy="40" r="15"/><line id="hand_minutes" x1="50" x2="58" y1="40" y2="34" stroke-width="1" class="hand"><animateTransform attributeName="transform" dur="60min" from="0 50 40" repeatCount="indefinite" to="360 50 40" type="rotate"/></line><line id="hand_hours" x1="50" x2="47" y1="40" y2="36" stroke-width="1" class="hand"><animateTransform attributeName="transform" dur="12h" from="0 50 40" repeatCount="indefinite" to="360 50 40" type="rotate"/></line><text id="text_background" x="50" y="74.5" font-family="Droid Serif" font-size="9" text-anchor="middle">At your own pace</text><text id="text_foreground" x="50" y="74.5" font-family="Droid Serif" font-size="9" text-anchor="middle">At your own pace</text><script type="text/javascript"><![CDATA[
      /**
        * Set the clock hands.
        *
        * This script will set the clock hands to the current time each time it is run.
        * It supports the hour, minute, and second hands and any combination of them;
        * i. e., it is not necessary to modify this script if any these hands are commented out or in.
        */
      function setClock() {
          var currentTime = new Date();
          var handHours = document.querySelectorAll("#hand_hours")[0];
          var handMinutes = document.querySelectorAll("#hand_minutes")[0];
          var handSeconds = document.querySelectorAll("#hand_seconds")[0];
          var cx = parseInt(handHours.getAttribute("x1") || handMinutes.getAttribute("x1") || handSeconds.getAttribute("x1"));
          var cy = parseInt(handHours.getAttribute("y1") || handMinutes.getAttribute("y1") || handSeconds.getAttribute("y1"));
          function getRad(degrees) {
              return degrees * (Math.PI / 180);
          }
          var degSec = currentTime.getSeconds() * 6;
          var degMin = currentTime.getMinutes() * 6
                       + degSec / (360 / 6);
          var degHour = currentTime.getHours() * 30
                        + degMin / (360 / 30);
          if (handSeconds) {
              var rad = getRad(degSec);
              handSeconds.setAttribute("x2",
                                       cx + (14 * Math.sin(rad)));
              handSeconds.setAttribute("y2",
                                       cy - (14 * Math.cos(rad)));
          }
          if (handMinutes) {
              var rad = getRad(degMin);
              handMinutes.setAttribute("x2",
                                       cx + (10 * Math.sin(rad)));
              handMinutes.setAttribute("y2",
                                       cy - (10 * Math.cos(rad)));
          }
          if (handHours) {
              var rad = getRad(degHour);
              handHours.setAttribute("x2",
                                     cx + (6 * Math.sin(rad)));
              handHours.setAttribute("y2",
                                     cy - (6 * Math.cos(rad)));
          }
      }
  ]]></script></svg>